{"version":3,"sources":["components/TodoItem.module.scss","components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodosList.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","components/Navbar.js","components/TodoContainer.js","index.js"],"names":["module","exports","Header","className","InputTodo","addItem","useState","title","setTitle","onSubmit","e","preventDefault","trim","length","alert","type","placeholder","onChange","target","value","name","TodoItem","todo","handleChangeProps","delTodoProps","updateItemProps","editing","setEditing","viewMode","editMode","display","styles","item","onDoubleClick","style","checked","completed","id","checkbox","onClick","textInput","onKeyDown","key","TodosList","todos","map","todoItem","SinglePage","slug","useParams","aboutContent","description","find","About","pushContent","useRouteMatch","url","path","to","NotMatch","Navbar","aboutContentPush","navbarOpen","setNavbarOpen","handleToggle","prev","color","width","height","link","activeClassName","exact","TodoContainer","todoItems","setTodoItems","setPushContent","prevState","useRef","useEffect","current","localStorage","setItem","JSON","stringify","temp","getItem","loadedTodos","parse","itemTitle","newItem","uuidv4","updatedItems","itemID","itemId","filter","reactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17112c02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__AOsZh\",\"checkbox\":\"TodoItem_checkbox__kjf67\",\"item-title\":\"TodoItem_item-title__1gn6V\",\"textInput\":\"TodoItem_textInput__3U4fL\",\"delete-icon\":\"TodoItem_delete-icon__383lT\"};","const Header = () => (\n  <header className=\"todo-header\">\n    <h1 className=\"todo-header__title\">todo</h1>\n  </header>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaPlusCircle } from 'react-icons/fa';\n\nconst InputTodo = ({ addItem }) => {\n  const [title, setTitle] = useState('');\n  const inputChangeHandler = (e) => {\n    setTitle(e.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (title.trim().length === 0) {\n      // eslint-disable-next-line no-alert\n      alert('Please write item');\n      return;\n    }\n    addItem(title.trim());\n    setTitle('');\n  };\n\n  return (\n    <form onSubmit={submitHandler} className=\"form-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Add Todo...\"\n        onChange={inputChangeHandler}\n        name=\"title\"\n        value={title}\n        className=\"input-text\"\n      />\n      <button type=\"submit\" className=\"input-submit\">\n        <FaPlusCircle />\n      </button>\n    </form>\n  );\n};\n\nInputTodo.propTypes = {\n  addItem: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import { PropTypes } from 'prop-types';\nimport React, { useState } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport styles from './TodoItem.module.scss';\n\nconst TodoItem = ({\n  todo,\n  handleChangeProps,\n  delTodoProps,\n  updateItemProps,\n}) => {\n  const [editing, setEditing] = useState(false);\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode = { display: 'none' };\n  } else {\n    editMode = { display: 'none' };\n  }\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const editingDone = (e) => {\n    if (e.key === 'Enter') {\n      if (e.target.value.trim() === '') {\n        delTodoProps(todo.id);\n      } else {\n        setEditing(false);\n      }\n    }\n  };\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => handleChangeProps(todo.id)}\n          className={styles.checkbox}\n        />\n        <span className={styles['item-title']}>{todo.title}</span>\n        <button type=\"button\" onClick={() => delTodoProps(todo.id)}>\n          <FaTrash className={styles['delete-icon']} />\n        </button>\n      </div>\n      <input\n        type=\"text\"\n        className={styles.textInput}\n        style={editMode}\n        value={todo.title}\n        onChange={(e) => {\n          updateItemProps(e.target.value, todo.id);\n        }}\n        onKeyDown={editingDone}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  delTodoProps: PropTypes.func.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  updateItemProps: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodosList = ({\n  todos,\n  handleChangeProps,\n  delTodoProps,\n  updateItemProps,\n}) => (\n  <ul className=\"todo--list\">\n    {todos.map((todoItem) => (\n      <TodoItem\n        key={todoItem.id}\n        todo={todoItem}\n        handleChangeProps={handleChangeProps}\n        delTodoProps={delTodoProps}\n        updateItemProps={updateItemProps}\n      />\n    ))}\n  </ul>\n);\nTodosList.propTypes = {\n  todos: PropTypes.arrayOf(Object).isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  delTodoProps: PropTypes.func.isRequired,\n  updateItemProps: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SinglePage = () => {\n  const { slug } = useParams();\n  const aboutData = [\n    {\n      slug: 'about-app',\n      title: 'About the App',\n      description:\n        'In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.',\n    },\n    {\n      slug: 'about-author',\n      title: 'About the Author',\n      description:\n        'This app was developed by Amr Ahmed, a self-taught web developer, Following tutorial of Ibas Majid, He is also a self-taught web developer and a technical writer opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.',\n    },\n  ];\n  const aboutContent = aboutData.find((item) => item.slug === slug);\n  const { title, description } = aboutContent;\n  return (\n    <div className=\"main__content\">\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default SinglePage;\n","import { PropTypes } from 'prop-types';\nimport React from 'react';\nimport { Route, Link, useRouteMatch } from 'react-router-dom';\nimport SinglePage from './SinglePage';\n\nconst About = ({ pushContent }) => {\n  const { url, path } = useRouteMatch();\n  return (\n    <div\n      className={\n        pushContent ? 'about__content about__content--pushed' : 'about__content'\n      }\n    >\n      <ul className=\"about__list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  pushContent: PropTypes.bool.isRequired,\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotMatch = () => (\n  <div>\n    <h3>No match for this page</h3>\n  </div>\n);\n\nexport default NotMatch;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { MdClose } from 'react-icons/md';\nimport { FiMenu } from 'react-icons/fi';\nimport { PropTypes } from 'prop-types';\n\nconst Navbar = ({ aboutContentPush }) => {\n  const [navbarOpen, setNavbarOpen] = useState(false);\n  const links = [\n    {\n      id: 1,\n      link: '/',\n      name: 'Home',\n    },\n    {\n      id: 2,\n      link: '/about',\n      name: 'About',\n    },\n  ];\n  const handleToggle = () => {\n    setNavbarOpen((prev) => !prev);\n    aboutContentPush();\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button type=\"button\" onClick={handleToggle}>\n        {navbarOpen ? (\n          <MdClose style={{ color: '#fff', width: '40px', height: '40px' }} />\n        ) : (\n          <FiMenu style={{ color: '#7b7b7b', width: '40px', height: '40px' }} />\n        )}\n      </button>\n      <ul className={`menuNav ${navbarOpen ? ' showMenu' : ''}`}>\n        {links.map((link) => (\n          <li key={link.id}>\n            <NavLink\n              to={link.link}\n              activeClassName=\"active-link\"\n              exact\n              onClick={handleToggle}\n            >\n              {link.name}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  aboutContentPush: PropTypes.func.isRequired,\n};\n\nexport default Navbar;\n","/* eslint-disable comma-dangle */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport TodosList from './TodosList';\nimport About from '../pages/About';\nimport NotMatch from '../pages/NotMatch';\nimport Navbar from './Navbar';\n\nconst TodoContainer = () => {\n  const [todoItems, setTodoItems] = useState([]);\n  const [pushContent, setPushContent] = useState(false);\n\n  // eslint-disable-next-line prefer-const\n  let prevState = useRef(todoItems);\n\n  useEffect(() => {\n    if (prevState.current !== todoItems) {\n      localStorage.setItem('todoItems', JSON.stringify(todoItems));\n      prevState.current = todoItems;\n    }\n  }, [todoItems]);\n\n  useEffect(() => {\n    const temp = localStorage.getItem('todoItems');\n    const loadedTodos = JSON.parse(temp);\n    if (loadedTodos) {\n      setTodoItems(loadedTodos);\n    }\n  }, []);\n\n  const aboutContentPush = () => {\n    setPushContent((prev) => !prev);\n  };\n\n  const handleChange = (itemID) => {\n    const updatedItems = todoItems.map((item) => {\n      if (item.id === itemID) {\n        return {\n          ...item,\n          completed: !item.completed,\n        };\n      }\n      return item;\n    });\n    setTodoItems(updatedItems);\n  };\n\n  const delTodo = (itemId) => {\n    const updatedItems = todoItems.filter((item) => item.id !== itemId);\n    setTodoItems(updatedItems);\n  };\n\n  const addItem = (itemTitle) => {\n    const newItem = {\n      id: uuidv4(),\n      title: itemTitle,\n      completed: false,\n    };\n    const updatedItems = [...todoItems, newItem];\n    setTodoItems(updatedItems);\n  };\n\n  const updateItem = (itemTitle, itemId) => {\n    const updatedItems = todoItems.map((item) => {\n      if (item.id === itemId) {\n        return {\n          ...item,\n          title: itemTitle,\n        };\n      }\n      return item;\n    });\n    setTodoItems(updatedItems);\n  };\n\n  return (\n    <>\n      <Navbar aboutContentPush={aboutContentPush} />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header />\n              <InputTodo addItem={addItem} />\n              <TodosList\n                todos={todoItems}\n                handleChangeProps={handleChange}\n                delTodoProps={delTodo}\n                updateItemProps={updateItem}\n              />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/about\">\n          <About pushContent={pushContent} />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default TodoContainer;\n","import React from 'react';\nimport reactDom from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport TodoContainer from './components/TodoContainer';\nimport './todo.scss';\n\nreactDom.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}